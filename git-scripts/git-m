#!/bin/sh -e

if [ -z ${1} ]; then
	echo "Script to update specified branch, rebase on it, checkout to it, merge previous branch, push, delete prev branch on local and origin"
	echo -e "\nUsage:"
	echo "  git m <branch>           # 'origin' as default remote"
	echo "  git m <remote> <branch>"

	exit 1;
fi

if [ -z ${2} ]; then
	branch=${1}
	remote="origin"
else
	remote=${1}
	branch=${2}
fi

prev_branch=$(git symbolic-ref -q HEAD --short)

git fetch ${remote} ${branch}:${branch}
git rebase ${branch} && \
git checkout ${branch}  && \
git merge --ff-only ${prev_branch} && \
git push && \
git rev-parse --symbolic-full-name --abbrev-ref ${prev_branch}@{u} && git push ${remote} --delete ${prev_branch} && \
git branch -d ${prev_branch}

# http://serverfault.com/questions/175052/how-to-tell-which-local-branch-is-tracking-which-remote-branch-in-git/384862#384862
